"""
Django settings for BBMS project.

Generated by 'django-admin startproject' using Django 5.2.3.

Docs:
- Settings overview: https://docs.djangoproject.com/en/5.2/topics/settings/
- Full reference: https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# üìÅ Base directory of the project
BASE_DIR = Path(__file__).resolve().parent.parent


# -------------------------------
# üîê Security Settings
# -------------------------------
SECRET_KEY = 'django-insecure-$@6ozw19qn7u!#cd2qzbbyraqu357@sjy#lm+jh91l6(nt542@'
# ‚ùó Replace with environment variable in production

DEBUG = True  # ‚ùó Set to False in production to disable detailed error pages

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    'your-render-url.onrender.com',  # ‚úÖ Add Render domain here
]

# -------------------------------
# üì¶ Installed Apps
# -------------------------------
INSTALLED_APPS = [
    'django.contrib.admin',            # Admin interface
    'django.contrib.auth',             # Authentication system
    'django.contrib.contenttypes',     # Content type framework
    'django.contrib.sessions',         # Session management
    'django.contrib.messages',         # Messaging framework
    'django.contrib.staticfiles',      # Static file handling

    'blood',                # ‚úÖ Core app for donations and requests
    'axes',                 # ‚úÖ Login rate-limiting and lockout
    'accounts',             # ‚úÖ User registration and profile
    'captcha',              # ‚úÖ Captcha protection for signup
    'widget_tweaks',        # ‚úÖ Template form customization
]


# -------------------------------
# ‚öôÔ∏è Middleware
# -------------------------------
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',

    # ‚úÖ Serve static files efficiently in production
    'whitenoise.middleware.WhiteNoiseMiddleware',

    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',

    'axes.middleware.AxesMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


# -------------------------------
# üîê Authentication Backends
# -------------------------------
AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesBackend',              # ‚úÖ Enables Axes login tracking
    'django.contrib.auth.backends.ModelBackend',  # Default Django auth
]


# -------------------------------
# üîó URL & Templates
# -------------------------------
ROOT_URLCONF = 'BBMS.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # ‚úÖ Global templates folder
        'APP_DIRS': True,                  # ‚úÖ Enables app-level templates
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',  # Required for login forms
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BBMS.wsgi.application'


# -------------------------------
# üóÉÔ∏è Database
# -------------------------------
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # ‚úÖ Simple local DB
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# ‚ùó For Render, switch to PostgreSQL and use DATABASE_URL env var


# -------------------------------
# üîê Password Validators
# -------------------------------
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


# -------------------------------
# üåç Internationalization
# -------------------------------
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# -------------------------------
# üé® Static Files
# -------------------------------
STATIC_URL = '/static/'  # ‚úÖ URL prefix for static files

# ‚úÖ Directory where collectstatic will gather static files for production
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Optional: enable gzip compression and caching
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# -------------------------------
# üîë Default Primary Key
# -------------------------------
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# -------------------------------
# üîê Session & Login Behavior
# -------------------------------
LOGIN_URL = 'login'  # ‚úÖ Redirects unauthenticated users to login
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # ‚úÖ Ends session when browser closes
LOGIN_REDIRECT_URL = '/accounts/dashboard/'  # ‚úÖ Post-login landing page


# -------------------------------
# üõ°Ô∏è Django Axes Configuration
# -------------------------------
AXES_FAILURE_LIMIT = 5           # ‚úÖ Max failed login attempts before lockout
AXES_COOLOFF_TIME = 1            # ‚úÖ Lockout duration in hours
AXES_LOCKOUT_CALLABLE = 'blood.views.custom_lockout_response'  # ‚úÖ Custom lockout handler
AXES_ENABLED = True              # ‚úÖ Toggle Axes protection
